(window.webpackJsonp=window.webpackJsonp||[]).push([[515],{886:function(e,t,r){"use strict";r.r(t);var n=r(9),s=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"面经总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面经总结"}},[e._v("#")]),e._v(" 面经总结")]),e._v(" "),t("h3",{attrs:{id:"two-sigma"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#two-sigma"}},[e._v("#")]),e._v(" Two Sigma")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://interviews-1.gitbook.io/two-sigma-interview/twosigmainterviewnotes",target:"_blank",rel:"noopener noreferrer"}},[e._v("网上别人的总结"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"phone-screen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#phone-screen"}},[e._v("#")]),e._v(" Phone Screen")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("Processing vs Threading")])]),e._v(" "),t("li",[t("p",[e._v("Throughput vs Latency")])]),e._v(" "),t("li",[t("p",[e._v("Random Generator (Same as this "),t("a",{attrs:{href:"https://leetcode.com/discuss/interview-question/619524/Google-or-Onsite-or-Random-Generator",target:"_blank",rel:"noopener noreferrer"}},[e._v("question"),t("OutboundLink")],1),e._v(" with different input)")]),e._v(" "),t("p",[e._v("https://emmableu.github.io/blog/pages/f9786a/")])])]),e._v(" "),t("h4",{attrs:{id:"onsite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onsite"}},[e._v("#")]),e._v(" Onsite")]),e._v(" "),t("h4",{attrs:{id:"_2021"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2021"}},[e._v("#")]),e._v(" 2021")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-814143-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("Course schedule")]),e._v(" (print out running time)")]),e._v(" "),t("li",[e._v("LRU -> LFU")]),e._v(" "),t("li",[e._v("Multiply Strings")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-805838-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("一个二维地图里面很多个点，找对应query里每个点最近的点。最近的点必须和target share横坐标或者纵坐标。地里面经有。("),t("strong",[e._v("shortest Manhattan distance point")]),e._v(")")]),e._v(" "),t("li",[t("strong",[e._v("Huffman encoding/decoding")])]),e._v(" "),t("li",[e._v("设计六子棋 ("),t("strong",[e._v("六子棋")]),e._v(")")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-804604-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("地里smart player 在棋盘上那题，就是ood，写了一下code，不用跑，然后天南地北讨论一下怎么样实现这个system")]),e._v(" "),t("li",[t("strong",[e._v("Text editor")])]),e._v(" "),t("li",[e._v("https://leetcode.com/discuss/interview-question/231726/image-matching or https://leetcode.com/problems/image-overlap/")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-784354-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("friend circle，每个人都有一些好朋友，问最多可以选多少人出来，让这些人中没有两两认识的 ("),t("strong",[e._v("Independent set")]),e._v(")")]),e._v(" "),t("li",[e._v("给一些task，然后有些task对其他的task有dependency，需要等它的dependency都运行完之后才能运行。让我以特定格式输入他们的运行顺序和时间点 ("),t("strong",[e._v("Course schedule")]),e._v(")")]),e._v(" "),t("li",[e._v("设计一个trading system，要求当system里buy和sell有match的时候就促成订单，然后以一定格式输出订单。印象中在一次contest里见过，跟 要把领药 有点像 (https://leetcode.com/problems/number-of-orders-in-the-backlog/)")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-729725-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("给几圈朋友，邀请最多的人并使他们互相之间都不是朋友 ("),t("strong",[e._v("Independent set")]),e._v(")")]),e._v(" "),t("li",[e._v("String encode to tree, decode from tree ("),t("strong",[e._v("Huffman encoding/decoding")]),e._v(")")]),e._v(" "),t("li",[e._v("设计stock class，每次来一个order返回matched order")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-725434-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("给一个城市list，以及城市对应坐标。给定一个城市list，对于这个list里的每个城市输出其他share同样的x or y坐标的最近的城市，距离用曼哈顿距离计算。("),t("strong",[e._v("shortest Manhattan distance point")]),e._v(")")]),e._v(" "),t("li",[t("strong",[e._v("Huffman encoding/decoding")])]),e._v(" "),t("li",[e._v("设计一个分布式时间序列的KV store, 支持timestamp based range read and write. 加分项是讨论一些clean/compaction的东西。这个题面试官聊得挺深的，而且需要写点代码，我正好深入研究过bigtable而且也做storage相关所以答出来了，但感觉如果你没研究过市面上那些主流数据库怎么work基本很难写。。。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-724161-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("题很长，invite friends to party什么一大堆，但是抽象起来就是给一个graph，找到最多nodes，这些nodes之间任意两两都不直接相邻（间接是允许的，比如 a - b - c，答案是 a, c）https://en.wikipedia.org/wiki/Independent_set_(graph_theory) ("),t("strong",[e._v("Independent set")]),e._v(")")]),e._v(" "),t("li",[e._v("Codebase build time‍‌‌‍‌‍‍‍‍‍‍‌‌‌‍‍‌‌‌ with dependencies ("),t("strong",[e._v("Course schedule")]),e._v(")")]),e._v(" "),t("li",[e._v("Design elevator, 可以用webapp和screen panel控制，需要badge scan，怎么处理电梯运行中有其他人request等等")])]),e._v(" "),t("h4",{attrs:{id:"_2020"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2020"}},[e._v("#")]),e._v(" 2020")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-699650-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("key value store 支持get(key) put(key, value)还有 getN(key, n), key 可能不在store里，找出所有key排序后大于等于这个key的n个value.  设计单机实现和分布式设计。(当时卡在linked list ordered dict 上， 回头想想可能是BST)")]),e._v(" "),t("li",[e._v("getPreviousMonday(date), inpute can be int 20201212 , output 20201207  （我想到的解法是用固定的一个Monday作为坐标推算）")]),e._v(" "),t("li",[e._v("生命游戏  利口 尔把酒 ，还问了matrix特别大怎么办，不是sparse 的情况。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-697982-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("Array数count")]),e._v(" "),t("li",[t("strong",[e._v("Huffman encoding/decoding")])]),e._v(" "),t("li",[e._v("Task running time ("),t("strong",[e._v("Course schedule")]),e._v(")")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-695840-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("给几个点的坐标，每个点有一个名字。 给某一个点，要你找到距离最小的点，而且这个点要和给定的点有相同x 或者相同 y。如果距离相同，则按照字母顺序排，小的字母优先。("),t("strong",[e._v("shortest Manhattan distance point")]),e._v(")")]),e._v(" "),t("li",[e._v("给一个棋盘，要你implement connect6 这个游戏， 需要写几个function: 1) reset 棋盘， 2）告诉你下一个player 是谁 3） 第一个player 摆棋子 4） 第二个player 摆棋子。 follow up 是要在constant time 判断是否当前player赢 ("),t("strong",[e._v("六子棋")]),e._v(")")]),e._v(" "),t("li",[e._v("领扣斯市伞(Multiply strings)  类似领扣 亿领亿伞(https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/) 但是需要分成k个和相同的sublist, 而且原来的array是可以shuffle的。 第一题让我写了代码，还需要自己想test case, 第二题直接讲思路就可以。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-686266-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("输入: [1,2,3,3,1,2], count: 3, 输出: [3,4,4,3,-1,-1]\n输出里表示的是从每个index出发, 最短subarray的长度满足distint count = count, 如果不满足则为-1.\nfu1: 正整数array, 能否分割成两个sum相同的subarray\nfu2: 整数array, 能否分割成两个sum相同的subarray\nfu3: 整数array, 能否分割成三个sum相同的subarray\nfu4: 正整数array, 能否分割成两个sum相同的sub sequence")]),e._v(" "),t("li",[e._v("卖东西  卖越多价格越低。input俩list 一个是数量 一个是单价  以及要求的某一个数量时候单价是多少，如果存在直接返回  不存在找左右两个点 或者如果最小就找旁边右面两个点 另一边一个意思  组成的直线 经过这个求的数量的y值")]),e._v(" "),t("li",[e._v("Text editor")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-684589-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("stock game：mono-queue")]),e._v(" "),t("li",[e._v("task execution time, task有dependancy，return的res得稍微处理一下逻辑，地里出现过：topo+pq ("),t("strong",[e._v("Course schedule")]),e._v(")")]),e._v(" "),t("li",[t("strong",[e._v("Huffman encoding/decoding")])])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-673373-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1),e._v(" (AI Research 面经，可能不适用)")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://oss.1point3acres.cn/forum/202009/29/021949e1z8o9nrnriy3ozy.png",alt:"img"}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://oss.1point3acres.cn/forum/202009/29/022013zxfb2ux0u2nr0znb.png",alt:"img"}})]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-638157-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("ABC 小姐姐   input是list of String     list of integer    list of integer   list of string    前三个代表cities的横纵坐标    最后一个是要求对于那些city找到同一个x或者同一个y坐标上  最近的city  不存在返回NONE  所以返回结果是list of string ("),t("strong",[e._v("Manhattan")]),e._v(")")]),e._v(" "),t("li",[e._v("卖东西  卖越多价格越低。input俩list 一个是数量 一个是单价  以及要求的某一个数量时候单价是多少，如果存在直接返回  不存在找左右两个点 或者如果最小就找旁边右面两个点 另一边一个意思  组成的直线 经过这个求的数量的y值")]),e._v(" "),t("li",[e._v("设计player 老鼠找cheese那道题  OO开始 延伸到system")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-634336-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("Manhattan")]),e._v(" "),t("li",[e._v("Multiply strings")]),e._v(" "),t("li",[e._v("Task scheduler ("),t("strong",[e._v("Course schedule")]),e._v(")\nround 1： 很nice的土耳其小哥，聊得很开心，因为我很喜欢土耳其（烤肉），所以聊了聊他们的城市和文化等等。题也不难，一个平面上有很多城市，城市的定义是名字（string）加坐标 （x，y）, x 和 y都是整数。求选定一个城市后，找出最近的一个城市名。只考虑x方向和y方向。会问复杂度\nround 2： 又是一个很nice的美国白人小哥，聊得也不错，字符串乘法。会问复杂度，java中要注意string 的加法运算的复杂度是O（n），用stringbuilder做。他强调这点很重要。\nround 3： 口音很奇怪的一个人（不是三哥，问了问其他人，觉得可能是个意大利人...），没开视频，顿时觉得要完...结果也是载在了这道题上。给一系列tasks，每个task有parent和运行时间。task的执行必须是在其parents都结束之后，并且tasks可以并行执行。打印出执行时间和顺序。我最后在他的提示下做出来了。题和答案我都会整理在gitbook中，等过整理好了贡献出来。")])]),e._v(" "),t("p",[e._v("下午两点被告知没过，也没有说原因。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-620143-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("Multiply strings")]),e._v(" "),t("li",[e._v("design一个game,考OOP. 有一个grid, grid上有个target，有一些players. Players不知道自己在grid上哪里，player有自己的移动strategy，但是输入是告诉你上次的移动是接近target了还是远离target了。\n比如有些是SmartPlayer，他会根据输入决定下一步怎么走，有些是RandomPlayer，他们就是随机‍‌‌‍‌‍‍‍‍‍‍‌‌‌‍‍‌‌‌走。")])]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.1point3acres.com/bbs/thread-598387-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一亩三分地"),t("OutboundLink")],1)]),e._v(" "),t("ol",[t("li",[e._v("Manhattan")]),e._v(" "),t("li",[e._v("Multiply strings")]),e._v(" "),t("li",[e._v("Text editor")])])])}),[],!1,null,null,null);t.default=s.exports}}]);