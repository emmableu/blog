(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{484:function(s,t,a){"use strict";a.r(t);var n=a(9),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"滑动窗口-sliding-window-相关题汇总"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口-sliding-window-相关题汇总"}},[s._v("#")]),s._v(" 滑动窗口 sliding window 相关题汇总")]),s._v(" "),t("p",[s._v("难点：")]),s._v(" "),t("ol",[t("li",[s._v("先更新window，后移动指针")]),s._v(" "),t("li",[s._v("注意起始条件 （左闭右开），以及最后返回长度（right-left）")])]),s._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/pages/057549/"}},[s._v("1610 - Maximum Number of Visible Points")])],1),s._v(" "),t("li",[t("RouterLink",{attrs:{to:"/pages/99a1b7/"}},[s._v("167 - 1004 - Max Consecutive Ones III (max holiday time)")])],1),s._v(" "),t("li",[t("RouterLink",{attrs:{to:"/pages/3454eb/"}},[s._v("114 - 1499 - Max Value of Equation - Hard")]),s._v(" 既要用到sliding window 又要用到mono queue")],1),s._v(" "),t("li",[t("RouterLink",{attrs:{to:"/pages/28a3e1/"}},[s._v("76-Minimum Window Substring")])],1),s._v(" "),t("li",[t("RouterLink",{attrs:{to:"/pages/d66aaa/"}},[s._v("3 - Longest Substring Without Repeating Characters")])],1)]),s._v(" "),t("p",[s._v("以第三题为例题， 考虑这个问题")]),s._v(" "),t("h2",{attrs:{id:"_03-longest-substring-without-repeating-characters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_03-longest-substring-without-repeating-characters"}},[s._v("#")]),s._v(" 03. Longest Substring Without Repeating Characters")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/submissions/",target:"_blank",rel:"noopener noreferrer"}},[s._v("LC link"),t("OutboundLink")],1),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/3-0.png",alt:""}})]),s._v(" "),t("p",[s._v("滑动窗口题，需要考虑：")]),s._v(" "),t("ol",[t("li",[s._v("何时扩大窗口")]),s._v(" "),t("li",[s._v("何时缩小窗口")]),s._v(" "),t("li",[s._v("何时返回答案")])]),s._v(" "),t("p",[s._v("满足条件的窗口用"),t("code",[s._v("[left, right)")]),s._v("来track。")]),s._v(" "),t("p",[s._v("为什么要左闭右开：因为我们需要起始位置是空元素，empty string\n1. 如果"),t("code",[s._v("[0, 0]")]),s._v(" 起始，两边都包括0，那么起始位置有一个元素\n2. 如果 （0， 0）起始，那么进入到下一个位子（0，1）的时候，还是没有元素但我们希望下一个位置有一个元素")]),s._v(" "),t("h2",{attrs:{id:"滑动窗口模版-虫取法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#滑动窗口模版-虫取法"}},[s._v("#")]),s._v(" 滑动窗口模版： 虫取法")]),s._v(" "),t("ul",[t("li",[s._v("前脚不动，把后脚移动过来；后脚不动，把前脚向前移动。")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findSubArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 双指针，表示当前遍历的区间[left, right)，左闭右开")]),s._v("\n    sums "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于统计 子数组/子区间 是否有效，根据题目可能会改成求和/计数")]),s._v("\n    res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存最大的满足题目要求的 子数组/子串 长度")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当右边的指针没有搜索到 数组/字符串 的结尾")]),s._v("\n        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        sums "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加当前右边指针的数字/字符的求和/计数")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" 区间"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("不符合题意："),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时需要一直移动左指针，直至找到一个符合题意的区间")]),s._v("\n            d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动左指针前需要从counter中减少left位置字符的求和/计数")]),s._v("\n            left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 真正的移动左指针，注意不能跟上面一行代码写反")]),s._v("\n            sums "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" d\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 到 while 结束时，我们找到了一个符合题意要求的 子数组/子串")]),s._v("\n        res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需要更新结果,因为左闭右开区间，所以这里距离就是right-left")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" res\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"本题-solution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本题-solution"}},[s._v("#")]),s._v(" 本题 Solution")]),s._v(" "),t("p",[s._v("标准的虫取法sliding window，用到了一个sliding window中常用的数据结构： "),t("code",[s._v("window")]),s._v(",是一个dict，"),t("br"),s._v("\n比如， sliding window内是"),t("code",[s._v("aab")]),s._v(",则"),t("code",[s._v("window = {a:2, b:1}")]),s._v(","),t("br"),s._v("\n当 "),t("code",[s._v("window[c]")]),s._v(" 值大于 1 时，说明窗口中存在重复字符，不符合条件，就该移动 "),t("code",[s._v("left")]),s._v(" 缩小窗口.")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" collections "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" defaultdict\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lengthOfLongestSubstring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""  \n        :type s: str        :rtype: int  \n        """')]),s._v("        \n        l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  \n        window "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" defaultdict"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n        max_len "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后返回的是左闭右开区间，e.g. [3,len(s)), 所以可以用 r<len(s)为条件  ")]),s._v("\n            c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n            window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n            r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n                window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n                l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  \n            max_len "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max_len"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" max_len    \n        \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);