(window.webpackJsonp=window.webpackJsonp||[]).push([[445],{816:function(e,t,a){"use strict";a.r(t);var s=a(9),i=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"http://web.mit.edu/6.S097/www/resources/Hierarchical.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("notes from MIT"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"definition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#definition"}},[e._v("#")]),e._v(" Definition")]),e._v(" "),t("p",[e._v("Hierarchical Clustering is an algorithm that iteratively cluster data samples into a hierarchical structure - a tree of clusters. It clusters data by iteratively merge clusters based on a similarity metric between clusters, such as min or max or average distance.")]),e._v(" "),t("h2",{attrs:{id:"hierarchical-clustering-v-s-k-means"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hierarchical-clustering-v-s-k-means"}},[e._v("#")]),e._v(" hierarchical clustering v.s. K-means")]),e._v(" "),t("p",[e._v("K-means tend to have the following issues:")]),e._v(" "),t("ol",[t("li",[e._v("Convergence time is poor. For example K-means takes worst case exponential number (2^(â„¦(n))) of iterations.")]),e._v(" "),t("li",[e._v("The final clusters depend heavily on the initialization. Usually a k random points are chosen.")]),e._v(" "),t("li",[e._v("The number of clusters is a huge issue. You are forced to specify the number of clusters in the beginning.")])]),e._v(" "),t("p",[e._v("Hierarchical clustering solves all these issues and even allows you a metric by which to cluster."),t("br"),e._v("\nHierarchical clustering is polynomial time, the final clusters are always the same depending on your metric, and the number of clusters is not at all a problem.")]),e._v(" "),t("h2",{attrs:{id:"hierarchical-clustering-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hierarchical-clustering-steps"}},[e._v("#")]),e._v(" Hierarchical clustering steps")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.learndatasci.com/glossary/hierarchical-clustering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("source"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Hierarchical clustering employs a measure of distance/similarity to create new clusters. It includes steps such as:")]),e._v(" "),t("ul",[t("li",[e._v("Step 1: Compute the proximity matrix using a particular distance metric (e.g., min distance)")]),e._v(" "),t("li",[e._v("Step 2: Each data point is assigned to a cluster")]),e._v(" "),t("li",[e._v("Step 3: Merge the clusters based on a metric for the similarity between clusters")]),e._v(" "),t("li",[e._v("Step 4: Update the distance matrix")]),e._v(" "),t("li",[e._v("Step 5: Repeat Step 3 and Step 4 until only a single cluster remains")])]),e._v(" "),t("h3",{attrs:{id:"computing-a-proximity-matrix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#computing-a-proximity-matrix"}},[e._v("#")]),e._v(" Computing a proximity matrix")]),e._v(" "),t("p",[e._v("The first step of the algorithm is to create a distance matrix. The values of the matrix are calculated by applying a distance function between each pair of objects. The "),t("strong",[e._v("Euclidean distance function")]),e._v(" is commonly used for this operation. The structure of the proximity matrix will be as follows for a data set with n elements. Here, represent the distance values between p_i and p_j")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/202210010143465.png",alt:""}})]),e._v(" "),t("h3",{attrs:{id:"similarity-between-clusters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#similarity-between-clusters"}},[e._v("#")]),e._v(" Similarity between Clusters")]),e._v(" "),t("p",[e._v("The main question in hierarchical clustering is how to calculate the distance between clusters and update the proximity matrix. There are many different approaches used to answer that question. Each approach has its advantages and disadvantages. The choice will depend on whether there is noise in the data set, whether the shape of the clusters is circular or not, and the density of the data points.")]),e._v(" "),t("p",[e._v("A numerical example will help illustrate the methods and choices. We'll use a small sample data set containing just nine two-dimensional points, displayed in Figure 1.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-plot.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 1: Sample Data")]),e._v(" "),t("p",[e._v("Suppose we have two clusters in the sample data set, as shown in Figure 2. There are different approaches to calculate the distance between the clusters. Popular methods are listed below.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-two-clusters-plot.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 2: Two clusters")]),e._v(" "),t("h4",{attrs:{id:"min-single-linkage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#min-single-linkage"}},[e._v("#")]),e._v(" Min (Single) Linkage")]),e._v(" "),t("p",[e._v("One way to measure the distance between clusters is to find the minimum distance between points in those clusters. That is, we can find the point in the first cluster nearest to a point in the other cluster and calculate the distance between those points. In Figure 2, the closest points are p_2 in one cluster and p_5 in the other.  The distance between those points, and hence the distance between clusters, is found as "),t("code",[e._v("d(p_2, p_5) = 4")]),e._v(".")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-min-distance-single-linkage.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 3: Min Linkage Method")]),e._v(" "),t("p",[e._v("The advantage of the Min method is that it can accurately handle non-elliptical shapes. The disadvantages are that it is sensitive to noise and outliers.")]),e._v(" "),t("h4",{attrs:{id:"max-complete-linkage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#max-complete-linkage"}},[e._v("#")]),e._v(" Max (Complete) Linkage")]),e._v(" "),t("p",[e._v("Another way to measure the distance is to find the maximum distance between points in two clusters. We can find the points in each cluster that are furthest away from each other and calculate the distance between those points. In Figure 3, the maximum distance is between p1 and p6. Distance between those two points, and hence the distance between clusters, is found as d(p1, p6) = 10.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-max-distance-complete-linkage.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 4: Max Linkage Method")]),e._v(" "),t("p",[e._v("Max is less sensitive to noise and outliers in comparison to MIN method. However, MAX can break large clusters and tends to be biased towards globular clusters.")]),e._v(" "),t("h4",{attrs:{id:"centroid-linkage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#centroid-linkage"}},[e._v("#")]),e._v(" Centroid Linkage")]),e._v(" "),t("p",[e._v("The Centroid method defines the distance between clusters as being the distance between their centers/centroids. After calculating the centroid for each cluster, the distance between those centroids is computed using a distance function.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-centroid-distance-linkage.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 5: Centroid Linkage Method")]),e._v(" "),t("h4",{attrs:{id:"average-linkage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#average-linkage"}},[e._v("#")]),e._v(" Average Linkage")]),e._v(" "),t("p",[e._v("The Average method defines the distance between clusters as the average pairwise distance among all pairs of points in the clusters. For simplicity, only some of the lines connecting pairs of points are shown in Figure 6.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://storage.googleapis.com/lds-media/images/Sample-data-average-distance-linkage.width-1200.jpg",alt:""}})]),e._v(" "),t("p",[e._v("Figure 6: Average Linkage Method")]),e._v(" "),t("h4",{attrs:{id:"ward-linkage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ward-linkage"}},[e._v("#")]),e._v(" Ward Linkage")]),e._v(" "),t("p",[e._v("The Ward approach analyzes the variance of the clusters rather than measuring distances directly, minimizing the variance between clusters.")]),e._v(" "),t("p",[e._v("With the Ward method, the distance between two clusters is related to how much the sum of squares (SS) value will increase when combined.")]),e._v(" "),t("p",[e._v("In other words, the Ward method attempts to minimize the sum of the squared distances of the points from the cluster centers. Compared to the distance-based measures described above, the Ward method is less susceptible to noise and outliers. Therefore, Ward's method is preferred more than others in clustering.")])])}),[],!1,null,null,null);t.default=i.exports}}]);