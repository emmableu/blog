(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{702:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://leetcode.cn/problems/guess-the-word/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LC Link"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/843-0.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"solution"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[t._v("#")]),t._v(" Solution:")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://leetcode.com/problems/guess-the-word/discuss/556075/How-to-explain-to-interviewer-843.-Guess-the-Word",target:"_blank",rel:"noopener noreferrer"}},[t._v("source"),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("Clarify")])])]),t._v(" "),s("p",[t._v("注意：这个问题不是要求必须10次以内猜出来，而是次数越少越好，但是最终超过10次也没事，只是给的几个test case 都是10次之内能猜出来的")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("Idea")])])]),t._v(" "),s("p",[t._v("调用 "),s("code",[t._v("master.guess()")]),t._v(" 10次，或者一直调用到猜出来，哪个先满足就停下来。")]),t._v(" "),s("p",[t._v("idea: 每次猜完以后减少下一次的candidate的数量")]),t._v(" "),s("p",[t._v("伪代码：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pseudocode version 1")]),t._v("\ni "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("guess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" candidates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" let us call it "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guess"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次猜完了减少下一次的candidate的数量")]),t._v("\n\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("怎样减少下一次的candidate的数量?")])]),t._v(" "),s("p",[s("code",[t._v("matches = master.guess(guess)")])]),t._v(" "),s("ul",[s("li",[t._v("如果 "),s("code",[t._v("matches == 6")]),t._v(", secret word 找到了，算法结束")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("matches != 6")]),t._v(", 说明 secret 和word之间刚好有 x 个字母是一样的")])]),t._v(" "),s("blockquote",[s("p",[t._v("因为 secret 和guess之间刚好有 x 个字母是一样的，所以我们在candidates里面可以只保留那些和 guess 刚好只有x个字母是一样的的单词，这样我们每次call master.guess 的时候candidate 数量就会变少。")])]),t._v(" "),s("p",[t._v("伪代码2：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pseudocode version 2")]),t._v("\ni "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("guess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" candidates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次猜完了减少下一次的candidate的数量")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" candiate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" candiates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" get_matches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candidate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\ttemp_candidates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candidate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\tcandidates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp_candidates\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[s("code",[t._v("get_matches")]),t._v(" 是用来检查两个单词之间有多少个match的字母：")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" c1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" c2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" matches\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code"}},[t._v("#")]),t._v(" code")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" random\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findSecretWord")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wordlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\tguess "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wordlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("randint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wordlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("guess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tcandidates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" wordlist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_matches"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t\tcandidates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\twordlist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" candidates\n\t\t\ti "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" c1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\tmatches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" c2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" matches\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("h3",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[t._v("#")]),t._v(" 举例")]),t._v(" "),s("p",[t._v('secret = "acckzz", wordlist = ["acckzz","ccbazz","eiowzz","abcczz"]')]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("i")]),t._v(" "),s("th",[t._v("guess")]),t._v(" "),s("th",[t._v("matches")]),t._v(" "),s("th",[t._v("wordlist")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("ccbazz")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v('["acckzz","eiowzz","abcczz"]')])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("abcczz")]),t._v(" "),s("td",[t._v("3")]),t._v(" "),s("td",[t._v("['acckzz']")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("acckzz")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("[]")])])])]),t._v(" "),s("h3",{attrs:{id:"讨论这个算法有多大概率10次猜中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#讨论这个算法有多大概率10次猜中"}},[t._v("#")]),t._v(" 讨论这个算法有多大概率10次猜中：")]),t._v(" "),s("p",[t._v("p(x)： "),s("code",[t._v("master.guess(word) == x")]),t._v(" 的概率。也就是说")]),t._v(" "),s("ol",[s("li",[t._v("对于这x个里面的每个字母，从26个字母里面选对这个字母，且对于不在这x里面的字母，确定选的不是那个和要求的字母一样的字母： "),s("code",[t._v("(1/26)^x * (25/26)^(6-x)")])]),t._v(" "),s("li",[t._v("让选出来的这 x 个字母的位置正确： C(6, x)")])]),t._v(" "),s("p",[t._v("所以，在6 个数字里面 选对 x个 C(6, x)：\n"),s("code",[t._v("p(x) = (1/26)^x * (25/26)^(6-x) * C(6, x)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("p(0) = 79.03%")])]),t._v(" "),s("li",[s("code",[t._v("p(1) = 18.97%")])]),t._v(" "),s("li",[s("code",[t._v("p(2) = 1.90%")])]),t._v(" "),s("li",[s("code",[t._v("p(3) = 0.10%")])]),t._v(" "),s("li",[s("code",[t._v("p(4) = 0.003%")])]),t._v(" "),s("li",[s("code",[t._v("p(5) = 4.85e-5%")])]),t._v(" "),s("li",[s("code",[t._v("p(6) = 3.24e-7%")])])]),t._v(" "),s("p",[t._v("所以，")]),t._v(" "),s("ul",[s("li",[t._v("如果 "),s("code",[t._v("master.guess(word) == 0")]),t._v(", 我们就保留所有 "),s("code",[t._v("get_matches(word, candidate) == 0")]),t._v("  的 candidate，这样的话可以保留 "),s("code",[t._v("79.03%*79.03%")]),t._v(" = 62.45% 的 candidates.")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 1")]),t._v(", we will keep 18.97% * 18.97% = 3.60%")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 2")]),t._v(", we will keep 1.90% * 1.90% = 0.03")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 3")]),t._v(", we will keep 0")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 4")]),t._v(", we will keep 0")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 5")]),t._v(", we will keep 0")]),t._v(" "),s("li",[t._v("if "),s("code",[t._v("master.guess(word) == 6")]),t._v(", we will keep 0")])]),t._v(" "),s("p",[t._v("The expectation of ratio of candidates we will keep after calling master.guess() is: "),s("code",[t._v("66.05%")]),t._v("\nAt the beginning, we have 100 candidates, after each calling, we keep 66.05% of them, 这样的话最后可以保留 "),s("code",[t._v("66.5% ^ 10 = 1.6%")])])])}),[],!1,null,null,null);s.default=e.exports}}]);