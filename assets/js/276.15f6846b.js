(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{644:function(t,s,n){"use strict";n.r(s);var a=n(9),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/non-overlapping-intervals/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LC link"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://labuladong.gitee.io/algo/3/27/97/",target:"_blank",rel:"noopener noreferrer"}},[t._v("labuladong"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/435-0.png",alt:""}}),t._v("\n类似题：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://emmableu.github.io/blog/pages/ccab39/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Maximum Length of Pair Chain"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"solution-贪心-o-log-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#solution-贪心-o-log-n"}},[t._v("#")]),t._v(" solution: 贪心，O(log n)")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://labuladong.gitee.io/algo/3/27/97/",target:"_blank",rel:"noopener noreferrer"}},[t._v("labuladong"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("贪心选择性质：每一步都做出一个局部最优的选择，最终的结果就是全局最优")])]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("初始化cnt (#non-overlapping intervals) = 0")]),t._v(" "),s("li",[t._v("从区间集合 intervals 中选择一个区间 x (intervals[cur])，这个 x 是在当前所有区间中结束最早的（end 最小）。")]),t._v(" "),s("li",[t._v("把所有与 x 区间相交的区间从区间集合 intervals 中删除。(即用"),s("code",[t._v("cur")]),t._v("走到下一个和x不相交的区间上), 找到之后 cnt += 1")]),t._v(" "),s("li",[t._v("重复步骤 1 和 2，直到 intervals 为空为止。之前选出的那些 x 就是最大不相交子集。")])]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eraseOverlapIntervals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按end升序排序")]),t._v("\n        intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 至少有一个区间不相交")]),t._v("\n        cnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 排序后， 第一个区间就是x")]),t._v("\n        x_end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" intvl "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intvl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" x_end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到了下一个选择的区间")]),t._v("\n                cnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                x_end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intvl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intervals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" cnt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);