(window.webpackJsonp=window.webpackJsonp||[]).push([[432],{808:function(e,t,a){"use strict";a.r(t);var i=a(9),n=Object(i.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://developers.google.com/machine-learning/glossary#a",target:"_blank",rel:"noopener noreferrer"}},[e._v("source"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("webwhiteboard website: https://webwhiteboard.com/")]),e._v(" "),t("h2",{attrs:{id:"a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a"}},[e._v("#")]),e._v(" a")]),e._v(" "),t("ul",[t("li",[e._v("accuracy: The fraction of predictions that a classification model got right")]),e._v(" "),t("li",[e._v("activation function: A function (for example, ReLU or sigmoid) that takes in the weighted sum of all of the inputs from the previous layer and then generates and passes an output value (typically nonlinear) to the next layer.")]),e._v(" "),t("li",[e._v("adaboost: "),t("RouterLink",{attrs:{to:"/pages/63f233/#例子-adaboost-adaptive-boost"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("attention: Any of a wide range of "),t("a",{attrs:{href:"https://developers.google.com/machine-learning/glossary#neural_network",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("neural network")]),t("OutboundLink")],1),e._v(" architecture mechanisms that aggregate information from a set of inputs in a data-dependent manner. A typical attention mechanism might consist of a weighted sum over a set of inputs, where the "),t("a",{attrs:{href:"https://developers.google.com/machine-learning/glossary#weight",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[e._v("weight")]),t("OutboundLink")],1),e._v(" for each input is computed by another part of the neural network.")]),e._v(" "),t("li",[e._v("AUC (Area under the ROC Curve): An evaluation metric that considers all possible classification thresholds. The Area Under the ROC curve is the probability that a classifier will be more confident that a randomly chosen positive example is actually positive than that a randomly chosen negative example is positive.")])]),e._v(" "),t("h2",{attrs:{id:"b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b"}},[e._v("#")]),e._v(" b")]),e._v(" "),t("ul",[t("li",[e._v("backpropagation: "),t("RouterLink",{attrs:{to:"/pages/2a7490/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("bagging: "),t("RouterLink",{attrs:{to:"/pages/63f233/#bagging-bootstrap-aggregating-concept/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("bag of words:\n"),t("ul",[t("li",[e._v("A representation of the words in a phrase or passage, irrespective of order. For example, bag of words represents the following three phrases identically:\n"),t("ul",[t("li",[e._v("the dog jumps")]),e._v(" "),t("li",[e._v("jumps the dog")]),e._v(" "),t("li",[e._v("dog jumps the")])])]),e._v(" "),t("li",[e._v("Each word is mapped to an index in a sparse vector, where the vector has an index for every word in the vocabulary. For example, the phrase the dog jumps is mapped into a feature vector with non-zero values at the three indices corresponding to the words the, dog, and jumps. The non-zero value can be any of the following:\n"),t("ul",[t("li",[e._v("A 1 to indicate the presence of a word.")]),e._v(" "),t("li",[e._v("A count of the number of times a word appears in the bag.")]),e._v(" "),t("li",[e._v("Some other value, such as the logarithm of the count of the number of times a word appears in the bag.")])])])])]),e._v(" "),t("li",[e._v("batch: The set of examples used in one iteration (that is, one gradient update) of model training.")]),e._v(" "),t("li",[e._v("batch normalization: "),t("RouterLink",{attrs:{to:"/pages/f405d4/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("batch size: The number of examples in a batch. For example, the batch size of SGD is 1, while the batch size of a mini-batch is usually between 10 and 1000.")]),e._v(" "),t("li",[e._v("boosting: "),t("RouterLink",{attrs:{to:"/pages/63f233/#boosting-concept"}},[e._v("local link")])],1)]),e._v(" "),t("h2",{attrs:{id:"c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[e._v("#")]),e._v(" c")]),e._v(" "),t("ul",[t("li",[e._v("centroid: The center of a cluster as determined by a k-means or k-median algorithm. For instance, if k is 3, then the k-means or k-median algorithm finds 3 centroids.")]),e._v(" "),t("li",[e._v("centroid-based clustering: A category of clustering algorithms that organizes data into nonhierarchical clusters. k-means is the most widely used centroid-based clustering algorithm. Contrast with hierarchical clustering algorithms.")]),e._v(" "),t("li",[e._v("collaborative filtering: Making predictions about the interests of one user based on the interests of many other users. Collaborative filtering is often used in recommendation systems.")]),e._v(" "),t("li",[e._v("confusion matrix: An NxN table that aggregates a classification model's correct and incorrect guesses. One axis of a confusion matrix is the label that the model predicted, and the other axis is the ground truth. N represents the number of classes. For example, N=2 for a binary classification model.")]),e._v(" "),t("li",[e._v("convolutional neural network: "),t("RouterLink",{attrs:{to:"/pages/f75af9/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("cross-entropy: "),t("RouterLink",{attrs:{to:"/pages/710eb0/#cross-entropy-loss"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("cross-validation: A mechanism for estimating how well a model would generalize to new data by testing the model against one or more non-overlapping data subsets withheld from the training set.")])]),e._v(" "),t("h2",{attrs:{id:"d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[e._v("#")]),e._v(" d")]),e._v(" "),t("ul",[t("li",[e._v("decision tree: "),t("RouterLink",{attrs:{to:"/pages/05b850/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("discriminative model: local link")]),e._v(" "),t("li",[e._v("dropout: "),t("RouterLink",{attrs:{to:"/pages/9e1504/"}},[e._v("local link")])],1)]),e._v(" "),t("h2",{attrs:{id:"e"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e"}},[e._v("#")]),e._v(" e")]),e._v(" "),t("ul",[t("li",[e._v("early stopping: A method for reducing overfit that involves ending model training before training loss finishes decreasing.")]),e._v(" "),t("li",[e._v("eigendecomposition: "),t("RouterLink",{attrs:{to:"/pages/0d8e27/#eigenvalue-decomposition"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("embeddings:\n"),t("ul",[t("li",[e._v("A categorical feature represented as a continuous-valued feature. Typically, an embedding is a translation of a high-dimensional vector into a low-dimensional space. For example, you can represent the words in an English sentence in either of the following two ways:\n"),t("ul",[t("li",[e._v("As a million-element (high-dimensional) sparse vector in which all elements are integers.\n"),t("ul",[t("li",[e._v("Each cell in the vector represents a separate English word;")]),e._v(" "),t("li",[e._v("the value in a cell represents the number of times that word appears in a sentence.")]),e._v(" "),t("li",[e._v("Since a single English sentence is unlikely to contain more than 50 words, nearly every cell in the vector will contain a 0.")]),e._v(" "),t("li",[e._v("The few cells that aren't 0 will contain a low integer (usually 1) representing the number of times that word appeared in the sentence.")])])]),e._v(" "),t("li",[e._v("As a several-hundred-element (low-dimensional) dense vector in which each element holds a floating-point value between 0 and 1. This is an embedding.")])])]),e._v(" "),t("li",[e._v("embeddings are trained by backpropagating loss just like any other parameter in a neural network.")]),e._v(" "),t("li",[e._v("The "),t("a",{attrs:{href:"https://wikipedia.org/wiki/Dot_product",target:"_blank",rel:"noopener noreferrer"}},[e._v("dot product"),t("OutboundLink")],1),e._v(" of two embeddings is a measure of their similarity.")])])]),e._v(" "),t("li",[e._v("ensemble: A collection of models trained independently whose predictions are averaged or aggregated. In many cases, an ensemble produces better predictions than a single model. For example, a random forest is an ensemble built from multiple decision trees. Note that not all decision forests are ensembles.")])]),e._v(" "),t("h2",{attrs:{id:"f"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[e._v("#")]),e._v(" f")]),e._v(" "),t("h2",{attrs:{id:"g"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g"}},[e._v("#")]),e._v(" g")]),e._v(" "),t("ul",[t("li",[e._v("Gaussian Mixed Model (GMM): "),t("RouterLink",{attrs:{to:"/pages/38f1b5/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("generalization curve: A loss curve showing both the training set and the validation set. A generalization curve can help you detect possible overfitting.")]),e._v(" "),t("li",[e._v("generative model:\n"),t("ul",[t("li",[e._v("a model that does either of the following:\n"),t("ul",[t("li",[e._v("Creates (generates) new examples from the training dataset. e.g., create poetry after training on a dataset of poems. (e.g., GAN)")]),e._v(" "),t("li",[e._v("Determines the probability that a new example comes from the training set, or was created from the same mechanism that created the training set. e.g., after training on a dataset consisting of English sentences, a generative model could determine the probability that new input is a valid English sentence.(e.g., Naive Bayes)")])])]),e._v(" "),t("li",[e._v("A generative model can understand the distribution of examples or particular features in a dataset.")])])]),e._v(" "),t("li",[e._v("gradient: The vector of partial derivatives with respect to all of the independent variables. In machine learning, the gradient is the vector of partial derivatives of the model function. The gradient points in the direction of steepest ascent.")]),e._v(" "),t("li",[e._v("gradient boost: "),t("RouterLink",{attrs:{to:"/pages/049472/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("gradient descent: A technique to minimize loss by computing the gradients of loss with respect to the model's parameters, conditioned on training data. In another word, gradient descent iteratively adjusts parameters, gradually finding the best combination of weights and bias to minimize loss.")])]),e._v(" "),t("h2",{attrs:{id:"h"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#h"}},[e._v("#")]),e._v(" h")]),e._v(" "),t("ul",[t("li",[e._v("hierarchical clustering: "),t("RouterLink",{attrs:{to:"/pages/4d184b/"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("hinge loss: A family of loss functions for classification designed to find the decision boundary as distant as possible from each training example, thus maximizing the margin between examples and the boundary. SVMs use hinge loss (or a related function, such as squared hinge loss).")])]),e._v(" "),t("h2",{attrs:{id:"i"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[e._v("#")]),e._v(" i")]),e._v(" "),t("ul",[t("li",[e._v("Independent and identically distributed random variables (iid): we say a bunch of random variables is independent and identically distributed if each random variable has the same probability distribution as the others, and, between any two of them, these variables are mutually independent.\n"),t("ul",[t("li",[e._v("Identically Distributed means that there are no overall trends–the distribution doesn’t fluctuate and all items in the sample are taken from the same probability distribution.")]),e._v(" "),t("li",[e._v("Independent means that the sample items are all independent events. In other words, they aren’t connected to each other in any way.[2] In other words, knowledge of the value of one variable gives no information about the value of the other and vice versa.")])])])]),e._v(" "),t("h2",{attrs:{id:"j"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j"}},[e._v("#")]),e._v(" j")]),e._v(" "),t("h2",{attrs:{id:"k"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k"}},[e._v("#")]),e._v(" k")]),e._v(" "),t("ul",[t("li",[e._v("k-means:\n"),t("ul",[t("li",[e._v("A clustering algorithm that clusters samples by:\n"),t("ol",[t("li",[e._v("Iteratively determines the best k center points.")]),e._v(" "),t("li",[e._v("Assigns each sample to the closest center points. Those samples nearest the same center points belong to the same group.")])])]),e._v(" "),t("li",[e._v("So, k-means algorithm picks center points to minimize the cumulative square of the distances from each sample to its closest center points")])])]),e._v(" "),t("li",[e._v("knn: a classification algorithm, which classifies the new data points based on the similarity measure of the earlier stored data points.")])]),e._v(" "),t("h2",{attrs:{id:"l"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[e._v("#")]),e._v(" l")]),e._v(" "),t("ul",[t("li",[e._v("L1 regularization: A type of regularization that penalizes weights in proportion to the sum of the absolute values of the weights. In models relying on sparse features, L1 regularization helps drive the weights of irrelevant or barely relevant features to exactly 0, which removes those features from the model.")]),e._v(" "),t("li",[e._v("L2 regularization: A type of regularization that penalizes weights in proportion to the sum of the squares of the weights. L2 regularization helps drive outlier weights (those with high positive or low negative values) closer to 0 but not quite to 0. (Contrast with L1 regularization.) L2 regularization always improves generalization in linear models.")]),e._v(" "),t("li",[e._v("learning rate: A scalar used to train a model via gradient descent. During each iteration, the gradient descent algorithm multiplies the learning rate by the gradient. The resulting product is called the gradient step.")]),e._v(" "),t("li",[e._v("logistic regression: A classification model that uses a sigmoid function to convert a linear model's raw prediction (y') into a value between 0 and 1.")]),e._v(" "),t("li",[e._v("Long Short-Term Memory (LSTM): A type of cell in a recurrent neural network used to process sequences of data in applications such as handwriting recognition, machine translation, and image captioning. LSTMs address the vanishing gradient problem that occurs when training RNNs due to long data sequences by maintaining history in an internal memory state based on new input and context from previous cells in the RNN.")]),e._v(" "),t("li",[e._v("loss: A measure of how far a model's predictions are from its label.")]),e._v(" "),t("li",[e._v("loss curve: A graph of loss as a function of training iterations.")])]),e._v(" "),t("h2",{attrs:{id:"m"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[e._v("#")]),e._v(" m")]),e._v(" "),t("ul",[t("li",[e._v("mini-batch: A small, randomly selected subset of the entire batch of examples run together in a single iteration of training or inference. The batch size of a mini-batch is usually between 10 and 1,000. It is much more efficient to calculate the loss on a mini-batch than on the full training data.")])]),e._v(" "),t("h2",{attrs:{id:"n"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[e._v("#")]),e._v(" n")]),e._v(" "),t("ul",[t("li",[e._v("naive bayes: "),t("RouterLink",{attrs:{to:"/pages/ee42b0/#naive-bayes-算法"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("normalization: The process of converting an actual range of values into a standard range of values, typically -1 to +1 or 0 to 1.")])]),e._v(" "),t("h2",{attrs:{id:"o"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#o"}},[e._v("#")]),e._v(" o")]),e._v(" "),t("ul",[t("li",[e._v("overfitting: Creating a model that matches the training data so closely that the model fails to make correct predictions on new data.")])]),e._v(" "),t("h2",{attrs:{id:"p"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#p"}},[e._v("#")]),e._v(" p")]),e._v(" "),t("ul",[t("li",[e._v("Principle Component Analysis (PCA): "),t("RouterLink",{attrs:{to:"/pages/0d8e27/"}},[e._v("local link")])],1)]),e._v(" "),t("h2",{attrs:{id:"q"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[e._v("#")]),e._v(" q")]),e._v(" "),t("h2",{attrs:{id:"r"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#r"}},[e._v("#")]),e._v(" r")]),e._v(" "),t("ul",[t("li",[e._v("random forest: "),t("RouterLink",{attrs:{to:"/pages/63f233/#随机森林算法-random-forest"}},[e._v("local link")])],1),e._v(" "),t("li",[e._v("Rectified Linear Unit (ReLU): An activation function with the following rules:\n"),t("ul",[t("li",[e._v("If input is negative or zero, output is 0.")]),e._v(" "),t("li",[e._v("If input is positive, output is equal to input.")])])]),e._v(" "),t("li",[e._v("recurrent neural network (RNN): A neural network that is intentionally run multiple times, where parts of each run feed into the next run. Specifically, hidden layers from the previous run provide part of the input to the same hidden layer in the next run. Recurrent neural networks are particularly useful for evaluating sequences, so that the hidden layers can learn from previous runs of the neural network on earlier parts of the sequence.")]),e._v(" "),t("li",[e._v("regularization: The penalty on a model's complexity. Regularization helps prevent overfitting. Different kinds of regularization include:\n"),t("ul",[t("li",[e._v("L1 regularization")]),e._v(" "),t("li",[e._v("L2 regularization")]),e._v(" "),t("li",[e._v("dropout regularization")]),e._v(" "),t("li",[e._v("early stopping (this is not a formal regularization method, but can effectively limit overfitting)")])])]),e._v(" "),t("li",[e._v("regularization rate: A scalar value, represented as lambda, specifying the relative importance of the regularization function. The following simplified loss equation shows the regularization rate's influence:\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/202209292333236.png",alt:""}})]),e._v(" "),t("li",[e._v("ROC (receiver operating characteristic) Curve: A curve of true positive rate vs. false positive rate at different classification thresholds.")]),e._v(" "),t("li",[e._v("Root Mean Squared Error (RMSE): The square root of the Mean Squared Error.")])]),e._v(" "),t("h2",{attrs:{id:"s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[e._v("#")]),e._v(" s")]),e._v(" "),t("ul",[t("li",[e._v("scaling: A commonly used practice in feature engineering to tame a feature's range of values to match the range of other features in the dataset.")]),e._v(" "),t("li",[e._v("softmax: A function that provides probabilities for each possible class in a multi-class classification model. The probabilities add up to exactly 1.0.")]),e._v(" "),t("li",[e._v("Squared loss: The loss function used in linear regression. This function calculates the squares of the difference between a model's predicted value for a labeled example and the actual value of the label.")]),e._v(" "),t("li",[e._v("Support Vector Machines (SVMs): A classification algorithm that seeks to maximize the margin between positive and negative classes by mapping input data vectors to a higher dimensional space.")]),e._v(" "),t("li",[e._v("sigmoid function: A function that maps logistic or multinomial regression output (log odds) to probabilities, returning a value between 0 and 1.")])]),e._v(" "),t("h2",{attrs:{id:"t"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#t"}},[e._v("#")]),e._v(" t")]),e._v(" "),t("p",[e._v("t-SNE: [local link]")]),e._v(" "),t("h2",{attrs:{id:"u"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#u"}},[e._v("#")]),e._v(" u")]),e._v(" "),t("ul",[t("li",[e._v("underfitting: Producing a model with poor predictive ability because the model hasn't captured the complexity of the training data.")])]),e._v(" "),t("h2",{attrs:{id:"v"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[e._v("#")]),e._v(" v")]),e._v(" "),t("ul",[t("li",[e._v("vanishing gradient problem: The tendency for the gradients of early hidden layers of some deep neural networks to become surprisingly flat (low).")])]),e._v(" "),t("h2",{attrs:{id:"w"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#w"}},[e._v("#")]),e._v(" w")]),e._v(" "),t("h2",{attrs:{id:"x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[e._v("#")]),e._v(" x")]),e._v(" "),t("h2",{attrs:{id:"y"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#y"}},[e._v("#")]),e._v(" y")]),e._v(" "),t("h2",{attrs:{id:"z"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#z"}},[e._v("#")]),e._v(" z")])])}),[],!1,null,null,null);t.default=n.exports}}]);