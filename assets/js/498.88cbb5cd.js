(window.webpackJsonp=window.webpackJsonp||[]).push([[498],{871:function(s,n,a){"use strict";a.r(n);var e=a(9),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Trainer.evaluate() ───────────────┐\n                                  │\ncalls → Trainer.evaluation_loop() ───────────────────┐\n│                                                    │\n│   ┌─────────────────────────────────────────────┐  │\n│   │ iterate over dataloader                     │  │\n│   │   → call self.prediction_step()             │  │\n│   │        └── calls self.compute_loss(...)     │  │\n│   └─────────────────────────────────────────────┘  │\n│                                                    │\n│ collect:                                           │\n│  - loss                                            │\n│  - logits (model predictions)                      │\n│  - labels                                          │\n│  - metrics (from compute_loss, if return=True)     │\n│                                                    │\n│ Finalize:                                          │\n│  - gather across processes                         │\n│  - truncate extra padding                          │\n│                                                    │\n└────── calls → self.compute_metrics(...) ←───┐      │\n                                              │      │\n               (if you set compute_metrics function) │\n                                              │      │\n    metrics dictionary (e.g. accuracy, F1) ◄──┘      │\n                                                     │\nReturns: EvalLoopOutput(predictions, labels, metrics)┘\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);