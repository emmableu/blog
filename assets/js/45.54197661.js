(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{413:function(s,t,a){"use strict";a.r(t);var n=a(9),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/median-of-two-sorted-arrays/",target:"_blank",rel:"noopener noreferrer"}},[s._v("LC link"),t("OutboundLink")],1),t("br"),s._v(" "),t("a",{attrs:{href:"https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-w-2/",target:"_blank",rel:"noopener noreferrer"}},[s._v("explanation"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-0.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"solution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[s._v("#")]),s._v(" Solution:")]),s._v(" "),t("h3",{attrs:{id:"_1-比较两个数组的第-k-2-个数字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-比较两个数组的第-k-2-个数字"}},[s._v("#")]),s._v(" 1. 比较两个数组的第 "),t("code",[s._v("k//2")]),s._v(" 个数字")]),s._v(" "),t("p",[s._v("注意：为什么是比较 k//2 i.e., 假设两个数组总长度是14, 我们就比较各自第3小的数字：")]),s._v(" "),t("ul",[t("li",[s._v("因为：我们只能保证其中一个数组的 nums[:3] 肯定在左边")])]),s._v(" "),t("p",[s._v("所以，我们也可以比较更小，比如两个数组总长度是14, 我们就比较各自第2小的数字；但是我们不能比较更大。\n所以 如果其中一个数组还剩一个，那么我们可以比较：第一个数组的剩下的第一小， 和第二个数组剩下的第2小")]),s._v(" "),t("h3",{attrs:{id:"_1-1-图表解答"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-图表解答"}},[s._v("#")]),s._v(" 1.1 图表解答")]),s._v(" "),t("p",[s._v("假设两个数组总长度是14， 我们要找第 7 小的数字。\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-1.png",alt:""}}),s._v("\n我们比较两个数组的第 "),t("code",[s._v("k//2")]),s._v(" 个数字，如果 k 是奇数，向下取整。也就是比较第 3 个数字，"),t("br"),s._v("\n上边数组中的 4 和下边数组中的 3，如果哪个小，就表明该数组的前 k//2 个数字比一个只可能是当前的中位数或比当前中位数小的数字（4）要小，所以1，2，3 都不是第 k（7） 小数字，所以可以排除。"),t("br"),s._v("\n将 $1349$ 和 $45678910$ 两个数组作为新的数组进行比较。"),t("br"),s._v("\n橙色的部分表示已经去掉的数字。"),t("br"),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-2.png",alt:""}}),s._v("\n由于我们已经排除掉了 3 个数字，就是这 3 个数字一定在最前边，"),t("br"),s._v("\n所以在两个新数组中，我们只需要找第 7 - 3 = 4 小的数字就可以了，也就是 k = 4。"),t("br"),s._v("\n此时两个数组，比较第 2 个数字，3 < 5，所以我们可以把小的那个数组中的 1 ，3 排除掉了。"),t("br"),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-3.png",alt:""}}),s._v("\n我们又排除掉 2 个数字，所以现在找第 4 - 2 = 2 小的数字就可以了。"),t("br"),s._v("\n此时比较两个数组中的第 k / 2 = 1 个数，4 == 4，怎么办呢？"),t("br"),s._v("\n由于两个数相等，所以我们无论去掉哪个数组中的都行，因为去掉 1 个总会保留 1 个的，所以没有影响。为了统一，我们就假设 4 > 4 吧，所以此时将下边的 4 去掉。\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-4.png",alt:""}}),s._v("\n由于又去掉 1 个数字，此时我们要找第 1 小的数字，所以只需判断两个数组中第一个数字哪个小就可以了，也就是 4。"),t("br"),s._v("\n所以第 7 小的数字是 4。"),t("br"),s._v("\n我们每次都是取 k/2 的数进行比较，有时候可能会遇到数组长度小于 k/2的时候。"),t("br"),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-5.png",alt:""}}),s._v("\n此时 k / 2 等于 3，而上边的数组长度是 2，我们此时将箭头指向它的末尾就可以了。这样的话，由于 2 < 3，所以就会导致上边的数组 1，2 都被排除。造成下边的情况。\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-6.png",alt:""}}),s._v("\n由于 2 个元素被排除，所以此时 k = 5，又由于上边的数组已经空了，我们只需要返回下边的数组的第 5 个数字就可以了。"),t("br"),s._v("\n从上边可以看到，无论是找第奇数个还是第偶数个数字，对我们的算法并没有影响，而且在算法进行中，k 的值都有可能从奇数变为偶数，最终都会变为 1 或者由于一个数组空了，直接返回结果。"),t("br"),s._v("\n所以我们采用递归的思路，为了防止数组长度小于 k//2，所以每次比较 min(k//2，len(数组) 对应的数字，把小的那个对应的数组的数字排除，将两个新数组进入递归，并且 k 要减去排除的数字的个数。出口就是当 k=1 或者其中一个数字长度是 0 了。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-call-stack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-call-stack"}},[s._v("#")]),s._v(" 1.2 call stack")]),s._v(" "),t("p",[s._v("假设两个数组总长度是14， 我们要找第 7 小的数字。")]),s._v(" "),t("p",[s._v("find_7th_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("0, 4, 5, 6\n1, 2, 3, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")\n7 // 2 = 3, 7 - 3 = 4")]),s._v(" "),t("p",[s._v("== find_4th_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("0, 4, 5, 6\n_, _, _, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")\n4 // 2 = 2, 4 - 2 = 2")]),s._v(" "),t("p",[s._v("== find_2nd_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("_, _, 5, 6\n_, _, _, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")")]),s._v(" "),t("p",[s._v("2 // 2 = 1, 2 - 1 = 1\n== find_1st_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("_, _, _, 6\n_, _, _, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")")]),s._v(" "),t("p",[s._v("return 6")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("但如果其中一个list特别小")]),s._v(" "),t("p",[s._v("假设两个数组总长度是14， 我们要找第 7 小的数字。")]),s._v(" "),t("p",[s._v("find_7th_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("0, \n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")")]),s._v(" "),t("p",[s._v("== find_6th_smallest (")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("_, \n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v(")\nreturn 6")]),s._v(" "),t("hr"),s._v(" "),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("为什么用递归而不是while loop\n因为用递归，可以把返回的多种情况比较清楚的表示出来")]),s._v(" "),t("p",[s._v("note:\nat 6th index, 这个是7th smallest element，\n因为index是从0 开始算")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findMedianSortedArrays")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        median_idx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get_median_idx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" idx "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" median_idx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# at idx 3 meaning find 4th smallest")]),s._v("\n            median "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("find_kth_smallest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("median"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        median "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" median\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find_kth_smallest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find kth smallest from nums1[i1:] and nums2[i2:]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1\n            i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i1\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [_, 1, 2, 3, 4], 3th smallest = nums[1 + 3 - 1] = 3")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" k "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" k "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        step_length "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" k "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        next_i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("compare"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("step_length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("find_kth_smallest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            k "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" step_length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" next_i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" number\n\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compare")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" step_length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" step_length "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" step_length "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" i1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" step_length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2 \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" i1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" i2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" step_length\n        \n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get_median_idx")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e.g., [0], [1,2,3], median = [1,2]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e.g., [0], [1,2], median = [1]")]),s._v("\n        size1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        size2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" size2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            median "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" size2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" size2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            median "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" size2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" median\n        \n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br")])]),t("h3",{attrs:{id:"_2-iteration-切数组-preferred"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-iteration-切数组-preferred"}},[s._v("#")]),s._v(" 2. iteration：切数组 (preferred)")]),s._v(" "),t("p",[s._v("一个长度为m的数组，有 0 到 m 总共 m + 1 个位置可以切"),t("br"),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-12.png",alt:""}}),s._v("\n我们把数组 A 和数组 B 分别在 i 和 j 进行切割。"),t("br"),s._v(" "),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-7.png",alt:""}}),s._v("\n将 i 的左边和 j 的左边组合成「左半部分」，将 i 的右边和 j 的右边组合成「右半部分」。")]),s._v(" "),t("ul",[t("li",[s._v("当 A 数组和 B 数组的总长度是偶数时，如果我们能够保证\n"),t("ul",[t("li",[s._v("左半部分的长度等于右半部分, $i + j = m - i + n - j$ 也就是 $j = (m + n)/2 - i$")]),s._v(" "),t("li",[s._v("左半部分的最大值小于等于右半部分的最小值 $$max ( A [ i - 1 ] , B [ j - 1 ])) <= min ( A [ i ], B [j]))$$")]),s._v(" "),t("li",[s._v("那么，中位数就可以表示为 （左半部分最大值 + 右半部分最小值 ）/ 2， 也就是$$(max ( A [ i - 1 ] , B [  j  - 1 ])+ min ( A [ i ] , B [ j ])) /  2$$")])])]),s._v(" "),t("li",[s._v("当 A 数组和 B 数组的总长度是奇数时，如果我们能够保证\n"),t("ul",[t("li",[t("p",[s._v("左半部分的长度=右半部分 + 1, $i + j = m - i + n - j + 1$ 也就是 $j = (m + n + 1)/2 - i$")])]),s._v(" "),t("li",[t("p",[s._v("左半部分的最大值小于等于右半部分的最小值 $$max ( A [ i - 1 ] , B [ j - 1 ])) <= min ( A [ i ], B [j]))$$")])]),s._v(" "),t("li",[t("p",[s._v("那么，中位数就是左半部分最大值，也就是左半部比右半部分多出的那一个数， 也就是$$max ( A [ i - 1 ] , B [  j  - 1 ])$$"),t("br"),s._v("\n上边的第一个条件我们其实可以合并为 $j = ( m + n + 1) // 2 - i$，因为如果 $m + n$ 是偶数，由于我们取的是 int 值，所以加 1 也不会影响结果。"),t("br"),s._v("\n由于 $0 <= i <= m$ ，为了保证 $0 <= j <= n$，我们必须保证 $m <= n$。证明如下.")]),s._v(" "),t("p",[s._v("$$m≤n,i<m,j=(m+n+1)/2−i≥(m+m+1)/2−i>(m+m+1)/2−m=0$$")])])])])]),s._v(" "),t("p",[s._v("$$m\\leq n,i>0,j=(m+n+1)/2-i\\leq (n+n+1)/2-i<(n+n+1)/2=n$$")]),s._v(" "),t("p",[s._v("最后一步由于是 int 间的运算，所以 1/2=0。"),t("br"),s._v("\n而对于第二个条件，奇数和偶数的情况是一样的，我们进一步分析。为了保证 $max ( A [ i - 1 ] , B [ j - 1 ]))<= min(A [ i ] , B [ j ]))$，因为 A 数组和 B 数组是有序的，所以 $A [ i - 1 ] <= A [ i ]，B [ i - 1 ] <= B [ i ]$ 这是天然的，所以我们只需要保证 $B [ j - 1 ] < = A [ i ]$ 和 $A [ i - 1 ] <= B [ j ]$ 所以我们分两种情况讨论：")]),s._v(" "),t("ul",[t("li",[s._v("$B [ j - 1 ] > A [ i ]$，并且为了不越界，要保证 j != 0，i != m\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-8.png",alt:""}}),s._v(" "),t("ul",[t("li",[s._v("此时很明显，我们需要增加 i ，为了数量的平衡还要减少 j ，幸运的是 j = ( m + n + 1) / 2 - i，i 增大，j 自然会减少。")])])]),s._v(" "),t("li",[s._v("$A [ i - 1 ] > B [ j ]$，并且为了不越界，要保证 i != 0，j != n\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-9.png",alt:""}}),s._v(" "),t("ul",[t("li",[s._v("此时和上边的情况相反，我们要减少 i ，增大 j 。")])])])]),s._v(" "),t("p",[s._v("上边两种情况，我们把边界都排除了，下面单独讨论两种边界情况。")]),s._v(" "),t("ul",[t("li",[s._v("当 i = 0, 或者 j = 0，也就是切在了最前边。\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-10.png",alt:""}}),s._v(" "),t("ul",[t("li",[s._v("此时左半部分当 i = 0 时，最大的值就是 $B [j - 1 ]$; 其实就是相当于给A数组的最左边添加一个哨兵 = - float('inf'),这样左边的最大值就和之前的算法一样 = max(A[i-1], B[j - 1])")]),s._v(" "),t("li",[s._v("右半部分最小值和之前一样 = min(A[i], B[j])")])])]),s._v(" "),t("li",[s._v("当 i = m 或者 j = n，也就是切在了最后边。\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/emmableu/image/master/4-11.png",alt:""}}),s._v(" "),t("ul",[t("li",[s._v("此时左半部分最大值和之前一样 = max(A[i-1], B[j - 1])")]),s._v(" "),t("li",[s._v("右半部分当 i = m 时，最小值就是 $B[ j ]$；当 i = m 时，最小值就是$B [ j ]$。 其实就是相当于给A数组的最右边添加一个哨兵 = float('inf'),这样右边的最小值就和之前的算法一样 = min(A[i], B[j])")])])])]),s._v(" "),t("p",[s._v("所有的思路都理清了，最后一个问题，增加 i 的方式。当然用二分了。初始化 i 为中间的值，然后减半找中间的，减半找中间的，减半找中间的直到答案。")]),s._v(" "),t("p",[s._v("因为左右真的添加哨兵要复制数组，且插入到最前面的时间复杂度为 O(n), 所以就模拟添加哨兵 （取不到了就取 +/- float('inf'))")]),s._v(" "),t("p",[s._v("因为只有一个点，且处理 edge case比较麻烦，所以用的"),t("a",{attrs:{href:"https://emmableu.github.io/blog/pages/fb7263/#_4-%E5%8F%AA%E5%9C%A8%E5%BE%AA%E7%8E%AF%E4%B8%ADreturn",target:"_blank",rel:"noopener noreferrer"}},[s._v("只在循环中return的二分搜索模版"),t("OutboundLink")],1),t("br"),s._v(" "),t("code",[s._v("nums1_prev")]),s._v(" 就是 A[i - 1],\n"),t("code",[s._v("nums1_cur")]),s._v(" 就是 A[i]")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("findMedianSortedArrays")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("findMedianSortedArrays"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保证 m <= n")]),s._v("\n        l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#l, r 是nums1数组的l，和r")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n            j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" i\n            nums1_prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-inf'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            nums2_prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-inf'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            nums1_cur "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inf"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            nums2_cur "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inf"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" nums1_cur "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums2_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mid < target pos")]),s._v("\n                l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" nums2_cur "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums1_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mid > target pos")]),s._v("\n                r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 奇数的话不需要考虑右半部分")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2_prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \\\n                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums1_cur"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums2_cur"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果是偶数的话返回结果")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);